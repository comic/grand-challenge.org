# Generated by Django 4.2.24 on 2025-10-22 15:56

import django.core.validators
from django.db import migrations, models

import grandchallenge.components.schemas
import grandchallenge.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ("challenges", "0060_auto_20250820_1420"),
    ]

    operations = [
        migrations.AlterField(
            model_name="challengerequest",
            name="algorithm_maximum_settable_memory_gb",
            field=models.PositiveSmallIntegerField(
                default=32,
                help_text="Maximum amount of main memory (DRAM) that participants will be allowed to assign to algorithm inference jobs for submission.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="algorithm_selectable_gpu_type_choices",
            field=models.JSONField(
                default=grandchallenge.components.schemas.get_default_gpu_type_choices,
                help_text='The GPU type choices that participants will be able to select for their algorithm inference jobs. Options are ["", "A100", "A10G", "V100", "K80", "T4"].',
                null=True,
                validators=[
                    grandchallenge.core.validators.JSONValidator(
                        schema={
                            "$schema": "http://json-schema.org/draft-07/schema",
                            "items": {
                                "enum": [
                                    "",
                                    "A100",
                                    "A10G",
                                    "V100",
                                    "K80",
                                    "T4",
                                ],
                                "type": "string",
                            },
                            "title": "The Selectable GPU Types Schema",
                            "type": "array",
                            "uniqueItems": True,
                        }
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="average_number_of_containers_per_team",
            field=models.PositiveIntegerField(
                default=5,
                help_text="Average number of algorithm containers per team.",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=1)
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="average_size_of_test_image_in_mb",
            field=models.PositiveIntegerField(
                help_text="Average size of a test image in MB.",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=1),
                    django.core.validators.MaxValueValidator(
                        limit_value=10000
                    ),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="expected_number_of_teams",
            field=models.PositiveIntegerField(
                help_text="How many teams do you expect to participate in your challenge?",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=1)
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="inference_time_limit_in_minutes",
            field=models.PositiveIntegerField(
                help_text="Average run time per algorithm job in minutes.",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=5),
                    django.core.validators.MaxValueValidator(limit_value=60),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="number_of_tasks",
            field=models.PositiveIntegerField(
                default=1,
                help_text="If your challenge has multiple tasks, we multiply the phase 1 and 2 cost estimates by the number of tasks.",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=1)
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_1_number_of_submissions_per_team",
            field=models.PositiveIntegerField(
                help_text="How many submissions do you expect per team in this phase?",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_1_number_of_test_images",
            field=models.PositiveIntegerField(
                help_text="Number of test images for this phase.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_2_number_of_submissions_per_team",
            field=models.PositiveIntegerField(
                help_text="How many submissions do you expect per team in this phase?",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_2_number_of_test_images",
            field=models.PositiveIntegerField(
                help_text="Number of test images for this phase.", null=True
            ),
        ),
    ]

name: Dependency Update

on:
  schedule:
    - cron: '27 6 * * 2'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.8'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  dependency-update:
    name: Dependency Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install poetry and pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry pre-commit virtualenv!=20.0.6
      - name: Update Depencencies
        id: dependency-update
        timeout-minutes: 5
        run: |
          POETRY_LOG=$(poetry update --lock --dry-run --no-interaction --no-ansi)
          POETRY_LOG="${POETRY_LOG//'%'/'%25'}"
          POETRY_LOG="${POETRY_LOG//$'\n'/'%0A'}"
          POETRY_LOG="${POETRY_LOG//$'\r'/'%0D'}"
          echo "::set-output name=poetry-log::$POETRY_LOG"
      - name: Set the environment
        run: |
          echo "GIT_COMMIT_ID=$(git describe --always --dirty)" >> $GITHUB_ENV
          echo "GIT_BRANCH_NAME=$(echo ${{ github.ref }} | cut -d/ -f3- | sed "s/[^[:alnum:]]//g")" >> $GITHUB_ENV
          echo "DOCKER_GID=$(getent group docker | cut -d: -f3)" >> $GITHUB_ENV
      - name: Build the test container, make the docs and migrations
        run: |
          make build_web_test
          make docs
          make migrations
      - name: Format the migrations
        # pre-commit will exit with code 1 when the files change, this is OK
        continue-on-error: true
        run: |
          git add .
          pre-commit run --all-files
      - name: Run the django tests
        run: |
          mkdir -p /tmp/coverage
          chmod a+w /tmp/coverage
          docker pull crccheck/hello-world
          docker-compose run --rm -v /tmp/coverage:/tmp/coverage web bash -c "COVERAGE_FILE=/tmp/coverage/.coverage pytest --cov-report term --cov=. --durations 10"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "Automated dependency update"
          branch-suffix: "short-commit-hash"
          delete-branch: true
          title: "Automated dependency update"
          body: "Output:\n\n```\n${{ steps.dependency-update.outputs.poetry-log }}\n```"

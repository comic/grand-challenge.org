# Generated by Django 4.2.17 on 2025-01-24 14:43

import uuid

import django.db.models.deletion
from django.db import migrations, models

import grandchallenge.core.models


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        (
            "challenges",
            "0047_challenge_percent_budget_consumed_warning_thresholds",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="OnboardingTask",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(editable=False)),
                (
                    "title",
                    models.CharField(
                        help_text="Title of this task", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of this task."
                    ),
                ),
                (
                    "complete",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this task is complete.",
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Time this task was last marked completed.",
                        null=True,
                    ),
                ),
                (
                    "responsible_party",
                    models.CharField(
                        choices=[
                            ("SUP", "Support"),
                            ("ORG", "Challenge Organizers"),
                        ],
                        default="ORG",
                        help_text="Who is responsible for completion of this task.",
                        max_length=3,
                    ),
                ),
                (
                    "deadline",
                    models.DateTimeField(help_text="Deadline for this task."),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="onboarding_tasks",
                        to="challenges.challenge",
                    ),
                ),
            ],
            options={
                "permissions": [
                    (
                        "complete_onboaringtask",
                        "Can mark this task as completed",
                    )
                ],
            },
            bases=(grandchallenge.core.models.FieldChangeMixin, models.Model),
        ),
        migrations.CreateModel(
            name="OnboardingTaskGroupObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="challenges.onboardingtask",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.group",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("group", "permission", "content_object")},
            },
        ),
    ]

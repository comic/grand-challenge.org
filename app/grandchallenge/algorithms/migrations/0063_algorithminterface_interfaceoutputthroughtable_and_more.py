# Generated by Django 4.2.16 on 2024-12-04 09:49

import uuid

import django.db.models.deletion
from django.db import migrations, models

from grandchallenge.algorithms.models import (
    get_existing_interface_for_inputs_and_outputs,
)


def create_algorithm_interfaces(apps, _schema_editor):
    Algorithm = apps.get_model("algorithms", "Algorithm")  # noqa: N806
    AlgorithmInterface = apps.get_model(  # noqa: N806
        "algorithms", "AlgorithmInterface"
    )
    AlgorithmInterfaceThroughTable = apps.get_model(  # noqa: N806
        "algorithms", "AlgorithmInterfaceThroughTable"
    )

    for algorithm in Algorithm.objects.prefetch_related(
        "inputs", "outputs"
    ).all():
        inputs = algorithm.inputs.all()
        outputs = algorithm.outputs.all()

        io = get_existing_interface_for_inputs_and_outputs(
            model=AlgorithmInterface, inputs=inputs, outputs=outputs
        )
        if not io:
            io = AlgorithmInterface.objects.create()
            io.inputs.set(inputs)
            io.outputs.set(outputs)

        AlgorithmInterfaceThroughTable.objects.create(
            algorithm=algorithm, interface=io, is_default=True
        )


class Migration(migrations.Migration):
    dependencies = [
        ("components", "0022_alter_componentinterface_kind_and_more"),
        ("algorithms", "0062_algorithmusercredit"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlgorithmInterface",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InterfaceOutputThroughTable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interface",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="algorithms.algorithminterface",
                    ),
                ),
                (
                    "output",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="components.componentinterface",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InterfaceInputThroughTable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "input",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="components.componentinterface",
                    ),
                ),
                (
                    "interface",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="algorithms.algorithminterface",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AlgorithmInterfaceThroughTable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                (
                    "algorithm",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="algorithms.algorithm",
                    ),
                ),
                (
                    "interface",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="algorithms.algorithminterface",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="algorithminterface",
            name="inputs",
            field=models.ManyToManyField(
                related_name="inputs",
                through="algorithms.InterfaceInputThroughTable",
                to="components.componentinterface",
            ),
        ),
        migrations.AddField(
            model_name="algorithminterface",
            name="outputs",
            field=models.ManyToManyField(
                related_name="outputs",
                through="algorithms.InterfaceOutputThroughTable",
                to="components.componentinterface",
            ),
        ),
        migrations.AddField(
            model_name="algorithm",
            name="interfaces",
            field=models.ManyToManyField(
                related_name="algorithm_interfaces",
                through="algorithms.AlgorithmInterfaceThroughTable",
                to="algorithms.algorithminterface",
            ),
        ),
        migrations.AddConstraint(
            model_name="algorithminterfacethroughtable",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("algorithm",),
                name="unique_default_interface_per_algorithm",
            ),
        ),
        migrations.AddConstraint(
            model_name="algorithminterfacethroughtable",
            constraint=models.UniqueConstraint(
                fields=("algorithm", "interface"),
                name="unique_algorithm_interface_combination",
            ),
        ),
        migrations.RunPython(create_algorithm_interfaces, elidable=True),
    ]

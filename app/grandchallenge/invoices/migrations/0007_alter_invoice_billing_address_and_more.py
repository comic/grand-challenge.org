# Generated by Django 4.2.19 on 2025-03-19 16:12

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("invoices", "0006_assign_perms_challenge_admins"),
    ]

    operations = [
        migrations.AlterField(
            model_name="invoice",
            name="billing_address",
            field=models.TextField(
                blank=True,
                help_text="The physical address of the client (required for non-complimentary invoices)",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="contact_email",
            field=models.EmailField(
                blank=True,
                help_text="Email of the person the invoice should be sent to (required for non-complimentary invoices)",
                max_length=254,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="contact_name",
            field=models.CharField(
                blank=True,
                help_text="Name of the person the invoice should be sent to (required for non-complimentary invoices)",
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="internal_client_number",
            field=models.CharField(
                blank=True,
                help_text="The internal client number (required for issued invoices)",
                max_length=8,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="internal_comments",
            field=models.TextField(
                blank=True,
                help_text="Internal comments about the invoice (required for complimentary invoices)",
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="internal_invoice_number",
            field=models.CharField(
                blank=True,
                help_text="The internal invoice number (required for issued invoices)",
                max_length=16,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="issued_on",
            field=models.DateField(
                blank=True,
                help_text="The date when the invoice was issued (required for issued invoices)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="paid_on",
            field=models.DateField(
                blank=True,
                help_text="The date when the invoice was paid (required for paid invoices)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="vat_number",
            field=models.CharField(
                blank=True,
                help_text="The VAT number of the client (required for non-complimentary invoices)",
                max_length=32,
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("payment_status", "ISSUED"), _negated=True),
                    ("issued_on__isnull", False),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="issued_on_date_required_for_issued_payment_status",
                violation_error_message="When setting the payment status to 'Issued', you must set the 'Issued on' date.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("payment_status", "ISSUED"), _negated=True),
                    models.Q(("internal_invoice_number", ""), _negated=True),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="internal_invoice_number_required_for_issued_payment_status",
                violation_error_message="When setting the payment status to 'Issued', you must specify the internal invoice number.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("payment_status", "ISSUED"), _negated=True),
                    models.Q(("internal_client_number", ""), _negated=True),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="internal_client_number_required_for_issued_payment_status",
                violation_error_message="When setting the payment status to 'Issued', you must specify the internal client number.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("payment_status", "PAID"), _negated=True),
                    ("paid_on__isnull", False),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="paid_on_date_required_for_paid_payment_status",
                violation_error_message="When setting the payment status to 'Paid', you must set the 'Paid on' date.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    ("internal_comments", ""),
                    _negated=True,
                ),
                name="comments_required_for_complimentary_payment_type",
                violation_error_message="Please explain why the invoice is complimentary in the internal comments.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    models.Q(("contact_name", ""), _negated=True),
                    _connector="OR",
                ),
                name="contact_name_required_for_non_complimentary_payment_type",
                violation_error_message="Contact name is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    models.Q(("contact_email", ""), _negated=True),
                    _connector="OR",
                ),
                name="contact_email_required_for_non_complimentary_payment_type",
                violation_error_message="Contact email is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    models.Q(("billing_address", ""), _negated=True),
                    _connector="OR",
                ),
                name="billing_address_required_for_non_complimentary_payment_type",
                violation_error_message="Billing address is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    models.Q(("vat_number", ""), _negated=True),
                    _connector="OR",
                ),
                name="vat_number_required_for_non_complimentary_payment_type",
                violation_error_message="VAT number is required for non-complimentary invoices.",
            ),
        ),
    ]

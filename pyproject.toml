[project]
authors = [
    {name = "James Meakin"},
]
license = {text = "Apache-2.0"}
requires-python = "<3.13,>=3.11"
dependencies = [
    "celery[redis,sqs]!=5.0.6,!=5.3.0,!=5.5.*",
    "kombu!=5.3.0,!=5.5.*",
    "django<4.3",
    "django-countries",
    "django-crispy-forms",
    "crispy-bootstrap4",
    "djangorestframework",
    "drf-spectacular",
    "python-magic",
    "gunicorn",
    "uvicorn[standard]",
    "django-select2",
    "django-celery-results!=2.4.0",
    "bleach[css]",
    "jsonschema",
    "django-autocomplete-light",
    "django-storages[s3]>=1.14.2",
    "boto3>1.18.8",
    "django-extensions",
    "django-simple-history",
    "sentry-sdk",
    "django-cors-headers",
    "django-celery-beat!=1.6.0",
    "django-guardian!=2.2.0",
    "django-markdownx",
    "django-filter",
    "ua-parser",
    "djangorestframework-csv",
    "humanize",
    "disposable-email-domains",
    "django-machina",
    "django-haystack",
    "citeproc-py",
    "pyswot",
    "django-redis",
    "django-allauth[mfa,socialaccount]",
    "requests",
    "Pillow",
    "panimg!=0.15.1,>=0.12.0",
    "django-activity-stream",
    "django-stdimage",
    "django-permissions-policy",
    "aws-xray-sdk",
    "django-deprecate-fields",
    "django-add-default-value",
    "Pygments",
    "django-forms-dynamic",
    "django-compressor",
    "django-libsass",
    "django-csp",
    "psycopg[c]>3.1.8",
    "pyjwt",
    "beautifulsoup4",
    "pymdown-extensions",
    "grand-challenge-forge>=0.7.1",
    "biopython",
    "cachetools",
]
name = "grand-challenge.org"
version = "0.1.0"
description = "A platform for end-to-end development of machine learning solutions in biomedical imaging"
readme = "README.md"

[project.urls]
homepage = "https://grand-challenge.org/"
repository = "https://github.com/comic/grand-challenge.org/"
documentation = "https://comic.github.io/grand-challenge.org/"

[dependency-groups]
dev = [
    "pytest-django",
    "pytest-cov",
    "pytest-mock",
    "factory-boy",
    "django-debug-toolbar",
    "sphinx-autobuild",
    "sphinx",
    "pytest-xdist",
    "sphinx-autodoc-typehints",
    "werkzeug",
    "sphinxcontrib-plantuml",
    "pytest-randomly",
    "sphinxcontrib-django",
    "amass",
    "watchfiles",
    "playwright",
    "pytest-playwright",
    "pytest-rerunfailures",
    "sphinx-exec-code",
]

[tool.uv]
no-binary-package = ["pycurl"]

[tool.isort]
profile = "black"
known_first_party = ["config", "grandchallenge", "tests"]
line_length = 79

[tool.black]
line-length = 79
target-version = ['py311']

[tool.curlylint.rules]
html_has_lang = 'en'
django_forms_rendering = true
image_alt = true
# TODO: Enable this, would otherwise be a big change
# indent = 4
meta_viewport = true
no_autofocus = true
tabindex_no_positive = true

[tool.amass]
output = "app/grandchallenge/core/static/vendored"

[tool.amass.dependencies]
htmx = { version = "==1.7.0", include = ["htmx(.min)?.js(.map)?"] }
"moment.js" = { version = "==2.24.0", include = ["moment(.min)?.js(.map)?"] }
vega = { version = "==5.20.2", include = ["vega(.min)?.js(.map)?"], maps = ["vega.min.js.map"] }
vega-lite = { version = "==5.1.0", include = ["vega-lite(.min)?.js(.map)?"] }
vega-embed = { version = "==6.17.0", include = ["vega-embed(.min)?.js(.map)?"] }
jsoneditor = { version = "==10.1.1", include = ["jsoneditor(.min)?.js(.map)?", "jsoneditor(.min)?.css(.map)?", "img/*"], maps = ["jsoneditor.map"] }
"sentry-browser" = { version = "==6.19.7", include = ["bundle(.min)?.js(.map)?"], maps = ["bundle.min.js.map", "bundle.js.map"] }
"hammer.js" = { version = "==2.0.8", include = ["hammer(.min)?.js(.map)?"] }
uppy = { version = "==2.2.0", include = ["uppy(.min)?.css(.map)?", "uppy(.min)?.js(.map)?"], maps = ["packages/uppy/dist/uppy.min.js.map"] }
jscolor = { version = "==2.5.1", include = ["jscolor(.min)?.js(.map)?"] }
jquery = { version = "==3.7.0", include = ["jquery(.min)?(.js|.map)?$"] }
font-awesome = { version = "==5.15.4", include = ["css/all(.min)?.css", "webfonts/*"] }
bootstrap = { version = "==4.6.2", include = ["js/bootstrap.bundle(.min)?.js(.map)?", "css/bootstrap(.min)?.css(.map)?", "scss/*"] }
bootswatch = { version = "==5.3.0", provider = "unpkg", include = ["dist/flatly/.*.scss"] }
floating-scroll = { version = "==3.2.0", provider = "unpkg", include = ["dist/jquery.floatingscroll.min.js", "dist/jquery.floatingscroll.css"] }
"@github/markdown-toolbar-element" = { version = "==1.2.0", provider = "unpkg", include = ["dist/index.umd.js$"] }
# Use the builder at https://datatables.net/download/
"datatables.net" = { version = "==2.1.8", provider = "unpkg", include = ["js/dataTables(.min)?.js"]}
"datatables.net-bs4" = { version = "==2.1.8", provider = "unpkg", include = ["css/dataTables.bootstrap4(.min)?.css", "js/dataTables.bootstrap4(.min)?.js"]}
"datatables.net-buttons" = { version = "==3.2.0", provider = "unpkg", include = ["js/dataTables.buttons(.min)?.js", "js/buttons.colVis(.min)?.js"]}
"datatables.net-buttons-bs4" = { version = "==3.2.0", provider = "unpkg", include = ["css/buttons.bootstrap4(.min)?.css", "js/buttons.bootstrap4(.min)?.js"]}

# Generated by Django 4.2.20 on 2025-03-19 08:49

import uuid

import django.db.models.deletion
from django.db import migrations, models

from grandchallenge.evaluation.models import (
    get_existing_evaluation_input_set_for_inputs,
)


def update_evaluation_inputs(apps, _schema_editor):
    Evaluation = apps.get_model("evaluation", "Evaluation")  # noqa: N806
    EvaluationInputSet = apps.get_model(  # noqa: N806
        "evaluation", "EvaluationInputSet"
    )

    evaluations = Evaluation.objects.prefetch_related("inputs").all()

    for evaluation in evaluations:
        inputs = evaluation.inputs.all()

        input_set = get_existing_evaluation_input_set_for_inputs(
            model=EvaluationInputSet,
            inputs=inputs,
        )
        if not input_set:
            input_set = EvaluationInputSet.objects.create()
            input_set.values.set(inputs)

        evaluation.input_set = input_set

    evaluations.bulk_update(evaluations, ["input_set"])


class Migration(migrations.Migration):
    dependencies = [
        ("components", "0025_alter_componentinterface_overlay_segments"),
        ("evaluation", "0076_alter_evaluation_unique_together"),
    ]

    operations = [
        migrations.CreateModel(
            name="EvaluationInputSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "values",
                    models.ManyToManyField(
                        blank=True,
                        related_name="eval_inputs",
                        to="components.componentinterfacevalue",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        # Add the temporary field with a different name
        migrations.AddField(
            model_name="evaluation",
            name="input_set",  # Temporary field name
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="evaluation.evaluationinputset",
            ),
        ),
        migrations.RunPython(update_evaluation_inputs, elidable=True),
        # Remove the old field
        migrations.RemoveField(
            model_name="evaluation",
            name="inputs",
        ),
        # Rename the temporary field to the final name
        migrations.RenameField(
            model_name="evaluation",
            old_name="input_set",
            new_name="inputs",
        ),
        migrations.AlterUniqueTogether(
            name="evaluation",
            unique_together={
                (
                    "submission",
                    "method",
                    "inputs",
                    "ground_truth",
                    "time_limit",
                    "requires_gpu_type",
                    "requires_memory_gb",
                )
            },
        ),
    ]

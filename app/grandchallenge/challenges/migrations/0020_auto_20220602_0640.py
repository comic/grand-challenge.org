# Generated by Django 3.2.13 on 2022-06-02 06:40

import stdimage.models
from django.db import migrations

import grandchallenge.core.storage


class Migration(migrations.Migration):

    dependencies = [
        (
            "challenges",
            "0019_alter_challengerequest_structured_challenge_submission_doi",
        ),
    ]

    operations = [
        migrations.AlterField(
            model_name="challenge",
            name="banner",
            field=stdimage.models.JPEGField(
                blank=True,
                force_min_size=False,
                help_text="Image that gets displayed at the top of each page. Recommended resolution 2200x440 px.",
                storage=grandchallenge.core.storage.PublicS3Storage(),
                upload_to=grandchallenge.core.storage.get_banner_path,
                variations={
                    "full": (None, None, False),
                    "x10": (1110, None, False),
                    "x15": (1665, None, False),
                    "x20": (2220, None, False),
                },
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="logo",
            field=stdimage.models.JPEGField(
                blank=True,
                force_min_size=False,
                help_text="A logo for this challenge. Should be square with a resolution of 640x640 px or higher.",
                storage=grandchallenge.core.storage.PublicS3Storage(),
                upload_to=grandchallenge.core.storage.get_logo_path,
                variations={
                    "full": (None, None, False),
                    "x02": (64, 64, True),
                    "x10": (320, 320, True),
                    "x15": (480, 480, True),
                    "x20": (640, 640, True),
                },
            ),
        ),
        migrations.AlterField(
            model_name="challenge",
            name="social_image",
            field=stdimage.models.JPEGField(
                blank=True,
                force_min_size=False,
                help_text="An image for this challenge which is displayed when you post the link on social media. Should have a resolution of 640x320 px (1280x640 px for best display).",
                storage=grandchallenge.core.storage.PublicS3Storage(),
                upload_to=grandchallenge.core.storage.get_social_image_path,
                variations={
                    "full": (None, None, False),
                    "x10": (640, 320, False),
                    "x15": (960, 480, False),
                    "x20": (1280, 640, False),
                },
            ),
        ),
        migrations.AlterField(
            model_name="externalchallenge",
            name="logo",
            field=stdimage.models.JPEGField(
                blank=True,
                force_min_size=False,
                help_text="A logo for this challenge. Should be square with a resolution of 640x640 px or higher.",
                storage=grandchallenge.core.storage.PublicS3Storage(),
                upload_to=grandchallenge.core.storage.get_logo_path,
                variations={
                    "full": (None, None, False),
                    "x02": (64, 64, True),
                    "x10": (320, 320, True),
                    "x15": (480, 480, True),
                    "x20": (640, 640, True),
                },
            ),
        ),
        migrations.AlterField(
            model_name="externalchallenge",
            name="social_image",
            field=stdimage.models.JPEGField(
                blank=True,
                force_min_size=False,
                help_text="An image for this challenge which is displayed when you post the link on social media. Should have a resolution of 640x320 px (1280x640 px for best display).",
                storage=grandchallenge.core.storage.PublicS3Storage(),
                upload_to=grandchallenge.core.storage.get_social_image_path,
                variations={
                    "full": (None, None, False),
                    "x10": (640, 320, False),
                    "x15": (960, 480, False),
                    "x20": (1280, 640, False),
                },
            ),
        ),
    ]

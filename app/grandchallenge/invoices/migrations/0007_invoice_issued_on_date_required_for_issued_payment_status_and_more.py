# Generated by Django 4.2.19 on 2025-03-14 19:52

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("invoices", "0006_assign_perms_challenge_admins"),
    ]

    operations = [
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("issued_on__isnull", False),
                    models.Q(("payment_status", "ISSUED"), _negated=True),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="issued_on_date_required_for_issued_payment_status",
                violation_error_message="When setting the payment status to 'Issued', you must set the 'Issued on' date.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("paid_on__isnull", False),
                    models.Q(("payment_status", "PAID"), _negated=True),
                    ("payment_type", "COMPLIMENTARY"),
                    _connector="OR",
                ),
                name="paid_on_date_required_for_paid_payment_status",
                violation_error_message="When setting the payment status to 'Paid', you must set the 'Paid on' date.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("internal_comments__gt", ""),
                    models.Q(("payment_type", "COMPLIMENTARY"), _negated=True),
                    _connector="OR",
                ),
                name="comments_required_for_complimentary_payment_type",
                violation_error_message="Please explain why the invoice is complimentary in the internal comments.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    ("contact_name__gt", ""),
                    _connector="OR",
                ),
                name="contact_name_required_for_non_complimentary_payment_type",
                violation_error_message="Contact name is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    ("contact_email__gt", ""),
                    _connector="OR",
                ),
                name="contact_email_required_for_non_complimentary_payment_type",
                violation_error_message="Contact email is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    ("billing_address__gt", ""),
                    _connector="OR",
                ),
                name="billing_address_required_for_non_complimentary_payment_type",
                violation_error_message="Billing address is required for non-complimentary invoices.",
            ),
        ),
        migrations.AddConstraint(
            model_name="invoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("payment_type", "COMPLIMENTARY"),
                    ("vat_number__gt", ""),
                    _connector="OR",
                ),
                name="vat_number_required_for_non_complimentary_payment_type",
                violation_error_message="VAT number is required for non-complimentary invoices.",
            ),
        ),
    ]

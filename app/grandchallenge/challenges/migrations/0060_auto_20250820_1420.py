# Generated by Django 4.2.23 on 2025-08-20 14:20

from django.db import migrations


def copy_data_to_new_budget_fields(apps, schema_editor):  # noqa: C901
    ChallengeRequest = apps.get_model(  # noqa: N806
        "challenges", "ChallengeRequest"
    )

    for cr in ChallengeRequest.objects.all():
        if not cr.algorithm_selectable_gpu_type_choices_for_tasks:
            cr.algorithm_selectable_gpu_type_choices_for_tasks = [
                cr.algorithm_selectable_gpu_type_choices
            ] * cr.number_of_tasks
        if not cr.algorithm_maximum_settable_memory_gb_for_tasks:
            cr.algorithm_maximum_settable_memory_gb_for_tasks = [
                cr.algorithm_maximum_settable_memory_gb
            ] * cr.number_of_tasks
        if not cr.average_size_test_image_mb_for_tasks:
            cr.average_size_test_image_mb_for_tasks = [
                cr.average_size_of_test_image_in_mb
            ] * cr.number_of_tasks
        if not cr.inference_time_average_minutes_for_tasks:
            cr.inference_time_average_minutes_for_tasks = [
                cr.inference_time_limit_in_minutes
            ] * cr.number_of_tasks
        if not cr.task_ids:
            cr.task_ids = list(range(1, cr.number_of_tasks + 1))
        if not cr.task_id_for_phases:
            cr.task_id_for_phases = [
                task_id for task_id in cr.task_ids for _ in range(2)
            ]
        if not cr.number_of_teams_for_phases:
            cr.number_of_teams_for_phases = (
                [cr.expected_number_of_teams] * 2 * cr.number_of_tasks
            )
        if not cr.number_of_submissions_per_team_for_phases:
            cr.number_of_submissions_per_team_for_phases = [
                cr.phase_1_number_of_submissions_per_team,
                cr.phase_2_number_of_submissions_per_team,
            ] * cr.number_of_tasks
        if not cr.number_of_test_images_for_phases:
            cr.number_of_test_images_for_phases = [
                cr.phase_1_number_of_test_images,
                cr.phase_2_number_of_test_images,
            ] * cr.number_of_tasks
        cr.save()


class Migration(migrations.Migration):

    dependencies = [
        (
            "challenges",
            "0059_challengerequest_algorithm_maximum_settable_memory_gb_for_tasks_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(copy_data_to_new_budget_fields, elidable=True)
    ]

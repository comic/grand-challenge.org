/*!
handy-scroll v1.1.5
https://amphiluke.github.io/handy-scroll/
(c) 2024 Amphiluke
*/
!function (t, n) { "object" == typeof exports && "undefined" != typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define(n) : (t = "undefined" != typeof globalThis ? globalThis : t || self).handyScroll = n() }(this, (function () { "use strict"; var t = Array.prototype.slice, n = "object" == typeof document && !!document.documentElement, e = function (t) { return "string" == typeof t ? document.body.querySelector(t) : t }, i = function (n) { return Array.isArray(n) ? n : n.nodeType === Node.ELEMENT_NODE ? [n] : "string" == typeof n ? t.call(document.body.querySelectorAll(n)) : t.call(n) }, o = { init: function (t) { var n = this, e = i(".handy-scroll-body").filter((function (n) { return n.contains(t) })); e.length && (n.scrollBody = e[0]), n.container = t, n.visible = !0, n.initWidget(), n.update(), n.addEventHandlers(), n.skipSyncContainer = n.skipSyncWidget = !1 }, initWidget: function () { var t = this, n = t.widget = document.createElement("div"); n.classList.add("handy-scroll"); var e = document.createElement("div"); e.style.width = t.container.scrollWidth + "px", n.appendChild(e), t.container.appendChild(n) }, addEventHandlers: function () { var t = this; (t.eventHandlers = [{ el: t.scrollBody || window, handlers: { scroll: function () { t.checkVisibility() }, resize: function () { t.update() } } }, { el: t.widget, handlers: { scroll: function () { t.visible && !t.skipSyncContainer && t.syncContainer(), t.skipSyncContainer = !1 } } }, { el: t.container, handlers: { scroll: function () { t.skipSyncWidget || t.syncWidget(), t.skipSyncWidget = !1 }, focusin: function () { setTimeout((function () { t.widget && t.syncWidget() }), 0) } } }]).forEach((function (t) { var n = t.el, e = t.handlers; Object.keys(e).forEach((function (t) { return n.addEventListener(t, e[t], !1) })) })) }, checkVisibility: function () { var t = this, n = t.widget, e = t.container, i = t.scrollBody, o = n.scrollWidth <= n.offsetWidth; if (!o) { var c = e.getBoundingClientRect(), r = i ? i.getBoundingClientRect().bottom : window.innerHeight || document.documentElement.clientHeight; o = c.bottom <= r || c.top > r } t.visible === o && (t.visible = !o, n.classList.toggle("handy-scroll-hidden")) }, syncContainer: function () { var t = this, n = t.widget.scrollLeft; t.container.scrollLeft !== n && (t.skipSyncWidget = !0, t.container.scrollLeft = n) }, syncWidget: function () { var t = this, n = t.container.scrollLeft; t.widget.scrollLeft !== n && (t.skipSyncContainer = !0, t.widget.scrollLeft = n) }, update: function () { var t = this, n = t.widget, e = t.container, i = t.scrollBody, o = e.clientWidth, c = e.scrollWidth; n.style.width = o + "px", i || (n.style.left = e.getBoundingClientRect().left + "px"), n.firstElementChild.style.width = c + "px", c > o && (n.style.height = n.offsetHeight - n.clientHeight + 1 + "px"), t.syncWidget(), t.checkVisibility() }, destroy: function () { var t = this; t.eventHandlers.forEach((function (t) { var n = t.el, e = t.handlers; Object.keys(e).forEach((function (t) { return n.removeEventListener(t, e[t], !1) })) })), t.widget.remove(), t.eventHandlers = t.widget = t.container = t.scrollBody = null } }, c = [], r = { mount: function (t) { i(t).forEach((function (t) { if (!r.mounted(t)) { var n = Object.create(o); c.push(n), n.init(t) } })) }, mounted: function (t) { var n = e(t); return c.some((function (t) { return t.container === n })) }, update: function (t) { i(t).forEach((function (t) { c.some((function (n) { return n.container === t && (n.update(), !0) })) })) }, destroy: function (t) { i(t).forEach((function (t) { c.some((function (n, e) { return n.container === t && (c.splice(e, 1)[0].destroy(), !0) })) })) }, destroyDetached: function () { c = c.filter((function (t) { return !!document.body.contains(t.container) || (t.destroy(), !1) })) } }; return n && function (t) { "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", (function () { t() }), { once: !0 }) : t() }((function () { r.mount("[data-handy-scroll]") })), r }));

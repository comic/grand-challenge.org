# Generated by Django 4.2.16 on 2024-12-05 13:14

import django.core.validators
from django.db import migrations, models

import grandchallenge.components.schemas
import grandchallenge.core.validators


class Migration(migrations.Migration):
    dependencies = [
        ("challenges", "0044_remove_challenge_registration_page_text"),
    ]

    operations = [
        migrations.AddField(
            model_name="challengerequest",
            name="algorithm_maximum_settable_memory_gb",
            field=models.PositiveSmallIntegerField(
                default=32,
                help_text="Maximum amount of memory that participants will be allowed to assign to algorithm inference jobs for submission.",
            ),
        ),
        migrations.AddField(
            model_name="challengerequest",
            name="algorithm_selectable_gpu_type_choices",
            field=models.JSONField(
                default=grandchallenge.components.schemas.get_default_gpu_type_choices,
                help_text='The GPU type choices that participants will be able to select for their algorithm inference jobs. Options are ["", "A100", "A10G", "V100", "K80", "T4"].',
                validators=[
                    grandchallenge.core.validators.JSONValidator(
                        schema={
                            "$schema": "http://json-schema.org/draft-07/schema",
                            "items": {
                                "enum": [
                                    "",
                                    "A100",
                                    "A10G",
                                    "V100",
                                    "K80",
                                    "T4",
                                ],
                                "type": "string",
                            },
                            "title": "The Selectable GPU Types Schema",
                            "type": "array",
                            "uniqueItems": True,
                        }
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="algorithm_inputs",
            field=models.TextField(
                help_text="What are the inputs to the algorithms submitted as solutions to your challenge going to be? Please describe in detail what the input(s) reflect(s), for example, MRI scan of the brain, or chest X-ray. Grand Challenge only supports .mha and .tiff image files and json files for algorithms."
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="algorithm_outputs",
            field=models.TextField(
                help_text="What are the outputs to the algorithms submitted as solutions to your challenge going to be? Please describe in detail what the output(s) reflect(s), for example, probability of a positive PCR result, or stroke lesion segmentation. "
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="average_size_of_test_image_in_mb",
            field=models.PositiveIntegerField(
                help_text="Average size of a test image in MB.",
                validators=[
                    django.core.validators.MinValueValidator(limit_value=1),
                    django.core.validators.MaxValueValidator(
                        limit_value=10000
                    ),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="budget_for_hosting_challenge",
            field=models.PositiveIntegerField(
                default=0,
                help_text="What is your budget for hosting this challenge? Please be reminded of our <a href='/challenge-policy-and-pricing/'>challenge pricing policy</a>.",
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="data_license",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="inference_time_limit_in_minutes",
            field=models.PositiveIntegerField(
                help_text="Average run time per algorithm job in minutes.",
                validators=[
                    django.core.validators.MinValueValidator(limit_value=5),
                    django.core.validators.MaxValueValidator(limit_value=60),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="long_term_commitment",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_1_number_of_submissions_per_team",
            field=models.PositiveIntegerField(
                help_text="How many submissions do you expect per team in this phase?"
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_1_number_of_test_images",
            field=models.PositiveIntegerField(
                help_text="Number of test images for this phase."
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_2_number_of_submissions_per_team",
            field=models.PositiveIntegerField(
                help_text="How many submissions do you expect per team in this phase?"
            ),
        ),
        migrations.AlterField(
            model_name="challengerequest",
            name="phase_2_number_of_test_images",
            field=models.PositiveIntegerField(
                help_text="Number of test images for this phase."
            ),
        ),
    ]

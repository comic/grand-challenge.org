@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Component.puml

LAYOUT_TOP_DOWN
LAYOUT_WITH_LEGEND()

title Component diagram for grand-challenge.org - API

Person(users, "Users", "")

Container_Boundary(s1, "API") {
    Component(gc_web_app, "Web Application", "Django", "Provides the grand challenge functionality via HTML and a REST API.")
    Component(nginx, "Reverse Proxy", "Nginx", "SSL termination and routing")
    Component(redis, "Cache", "Redis", "Local in-memory cache of expensive data.")
}

ContainerDb(postgres, "Database", "RDS/PostgreSQL", "Stores user information, medical imaging metadata, job results etc.")
Container(message_queue, "Message Queue", "SQS/Redis", "Queue of units of work Celery messages.")
Container(protected_s3, "Protected Data Store", "S3/Minio", "Stores protected medical imaging objects.")
Container(private_s3, "Private Data Store", "S3/Minio", "Stores private objects, container images etc.")

System_Ext(oauth, "Authentication", "Authenticates users through external providers (Google, GitHub).")
System_Ext(cdn, "Content Delivery Network", "Stores and serves static data (S3, CloudFront).")

Rel(users, nginx, "Use", "HTTPS, HTML, JSON")

Rel(gc_web_app, oauth, "Authenticates users against", "HTTPS, OAuth2")
Rel(gc_web_app, cdn, "Sends static data to", "HTTPS")

Rel(gc_web_app, postgres, "Reads and writes to", "SSL, SQL")
Rel(gc_web_app, protected_s3, "Stores objects in, and proxies access to", "HTTPS, S3")
Rel(gc_web_app, private_s3, "Stores objects in", "HTTPS, S3")
Rel(gc_web_app, message_queue, "Puts messages on", "SSL, SQS/Redis, Celery")
Rel_Neighbor(gc_web_app, redis, "Uses", "HTTP")

Rel(nginx, gc_web_app, "Proxies", "HTTP, HTML, JSON")

@enduml

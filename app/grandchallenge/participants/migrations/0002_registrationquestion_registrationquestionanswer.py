# Generated by Django 4.2.15 on 2024-09-10 08:19

import uuid

import django.db.models.deletion
from django.db import migrations, models

import grandchallenge.core.validators
import grandchallenge.participants.models


class Migration(migrations.Migration):

    dependencies = [
        ("challenges", "0037_external_evaluators_group"),
        ("participants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RegistrationQuestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "question_text",
                    models.TextField(
                        help_text="Text that will be displayed as a label during registration."
                    ),
                ),
                (
                    "question_help_text",
                    models.TextField(
                        blank=True,
                        help_text="Text that will be displayed as a helpful note during registration.",
                    ),
                ),
                (
                    "schema",
                    models.JSONField(
                        default=grandchallenge.participants.models.string_type_schema,
                        help_text="A JSON schema definition against which an answer is validated. See https://json-schema.org/.Only Draft 7, 6, 4 or 3 are supported.",
                        validators=[
                            grandchallenge.core.validators.JSONSchemaValidator()
                        ],
                    ),
                ),
                (
                    "required",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the question requires an answer or not.",
                    ),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_questions",
                        to="challenges.challenge",
                    ),
                ),
            ],
            options={
                "unique_together": {("question_text", "challenge")},
            },
        ),
        migrations.CreateModel(
            name="RegistrationQuestionAnswer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.JSONField(blank=True, default=str)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="participants.registrationquestion",
                    ),
                ),
                (
                    "registration_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registration_question_answers",
                        to="participants.registrationrequest",
                    ),
                ),
            ],
            options={
                "unique_together": {("registration_request", "question")},
            },
        ),
    ]

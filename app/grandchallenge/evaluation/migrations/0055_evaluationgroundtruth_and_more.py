# Generated by Django 4.2.13 on 2024-06-13 09:40

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import grandchallenge.core.storage
import grandchallenge.core.validators
import grandchallenge.evaluation.models
import grandchallenge.uploads.validators


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("algorithms", "0050_alter_algorithmmodel_comment"),
        ("uploads", "0006_userupload_mimetype"),
        ("evaluation", "0054_submission_algorithm_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="EvaluationGroundTruth",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "import_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Initialized"),
                            (1, "Queued"),
                            (2, "Re-Queued"),
                            (3, "Started"),
                            (4, "Cancelled"),
                            (5, "Failed"),
                            (6, "Completed"),
                        ],
                        db_index=True,
                        default=0,
                    ),
                ),
                ("status", models.TextField(editable=False)),
                ("sha256", models.CharField(editable=False, max_length=71)),
                (
                    "size_in_storage",
                    models.PositiveBigIntegerField(
                        default=0,
                        editable=False,
                        help_text="The number of bytes stored in the storage backend",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Add any information (e.g. version ID) about this object here.",
                    ),
                ),
                (
                    "is_desired_version",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "ground_truth",
                    models.FileField(
                        blank=True,
                        help_text=".tar.gz file of the ground truth that will be extracted to /opt/ml/input/data/ground_truth/ during inference",
                        storage=grandchallenge.core.storage.PrivateS3Storage(),
                        upload_to=grandchallenge.evaluation.models.ground_truth_path,
                        validators=[
                            grandchallenge.core.validators.ExtensionValidator(
                                allowed_extensions=(".tar.gz",)
                            )
                        ],
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "phase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ground_truths",
                        to="evaluation.phase",
                    ),
                ),
                (
                    "user_upload",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="uploads.userupload",
                        validators=[
                            grandchallenge.uploads.validators.validate_gzip_mimetype
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="submission",
            name="algorithm_image",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="algorithms.algorithmimage",
            ),
        ),
        migrations.AlterField(
            model_name="submission",
            name="algorithm_model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="algorithms.algorithmmodel",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="evaluation",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="evaluation",
            name="ground_truth",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="evaluation.evaluationgroundtruth",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="evaluation",
            unique_together={("submission", "method", "ground_truth")},
        ),
        migrations.CreateModel(
            name="EvaluationGroundTruthUserObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="evaluation.evaluationgroundtruth",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "permission", "content_object")},
            },
        ),
        migrations.CreateModel(
            name="EvaluationGroundTruthGroupObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="evaluation.evaluationgroundtruth",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.group",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("group", "permission", "content_object")},
            },
        ),
    ]
